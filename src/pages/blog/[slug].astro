---
import Layout from "../../layouts/Layout.astro";
import { getEntry } from "astro:content";
import { getCollection, getEntryBySlug } from "astro:content";
import { type CollectionEntry } from 'astro:content';
import { fade } from "astro:transitions";

// We want to prerender for static site generation
export const prerender = true;

// Get the slug from the URL
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the slug parameter from the URL
const { slug } = Astro.params;

// Get the post from props or fetch it directly if in SSR mode
let post: CollectionEntry<'blog'> | undefined = Astro.props.post;
if (!post && slug) {
  try {
    // Fallback to fetching by slug directly
    post = await getEntry('blog', slug);
  } catch (error) {
    console.error(`Error fetching blog post with slug ${slug}:`, error);
  }
}

// Handle the post rendering with robust error handling
let Content;
try {
  if (post) {
    const rendered = await post.render();
    Content = rendered.Content;
  }
} catch (error) {
  console.error("Error rendering blog post:", error);
}

const anim = {
  old: {
    name: "slide",
    duration: "0.8s",
    easing: "cubic-bezier(0.16, 1, 0.3, 1)",
    fillMode: "forwards",
  },
  new: {
    name: "slide",
    duration: "0.8s",
    easing: "cubic-bezier(0.16, 1, 0.3, 1)",
    fillMode: "backwards",
  },
};

const customTransition = {
  forwards: anim,
  backwards: anim,
};

// If no post is found, redirect to the blog homepage
if (!post) {
  return Astro.redirect("/blog");
}
---

<Layout
  title={post ? `${post.data.title} | Sergio Expósito Martínez` : "Artículo no encontrado | Sergio Expósito Martínez"}
  transition:animate={customTransition}
>
  <div class="min-h-screen bg-[#13151a] text-neutral-100 py-12 md:py-16 animate-fade-in">
    <div class="container mx-auto px-4 max-w-4xl">
      <a 
        href="/blog"
        class="inline-flex items-center text-pink-500 hover:text-pink-400 mb-8 transition-colors"
      >
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="w-4 h-4 mr-2 transform rotate-180" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M9 5l7 7-7 7"
          />
        </svg>
        Volver al blog
      </a>

      {post ? (
        <article>
          <!-- Hero image -->
          <div class="relative w-full h-[400px] mb-10 rounded-2xl overflow-hidden">
            <img
              src={post.data.image}
              alt={post.data.title}
              class="w-full h-full object-cover"
            />
            <!-- Overlay gradiente -->
            <div class="absolute inset-0 bg-gradient-to-t from-[#13151a] to-transparent"></div>
          </div>

          <header class="mb-10">
            <h1 
              class="text-4xl md:text-5xl font-bold mb-6 leading-tight"
              transition:name={`title-${post.slug}`}
            >
              {post.data.title}
            </h1>
            
            <div class="flex flex-wrap items-center gap-6 text-neutral-400">
              <time class="text-sm tracking-wider">
                {new Date(post.data.pubDate).toLocaleDateString("es-ES", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </time>

              {post.data.tags && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map(tag => (
                    <span class="bg-pink-900/30 text-pink-300 text-xs px-2 py-1 rounded-full">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </header>

          <div class="prose prose-lg prose-invert max-w-none">
            {Content ? <Content /> : <p>Error cargando el contenido del artículo.</p>}
          </div>

          {post.data.projectRelated && (
            <div class="mt-16 pt-8 border-t border-neutral-700">
              <h2 class="text-2xl font-bold mb-4">Proyecto relacionado</h2>
              <a 
                href={`/projects#${post.data.projectRelated}`}
                class="inline-flex items-center text-pink-500 hover:text-pink-400 transition-colors"
              >
                Ver proyecto: {post.data.projectRelated}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-4 h-4 ml-2 transform transition-transform group-hover:translate-x-1"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            </div>
          )}
        </article>
      ) : (
        <div class="text-center py-16">
          <h1 class="text-3xl font-bold mb-4">Artículo no encontrado</h1>
          <p class="text-neutral-300">El artículo que buscas no existe o ha sido movido.</p>
        </div>
      )}

      <div class="mt-16 pt-8 border-t border-neutral-700">
        <a 
          href="/blog"
          class="inline-flex items-center text-pink-500 hover:text-pink-400 transition-colors"
        >
          <svg 
            xmlns="http://www.w3.org/2000/svg" 
            class="w-4 h-4 mr-2 transform rotate-180" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M9 5l7 7-7 7"
            />
          </svg>
          Ver más artículos
        </a>
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  /* Estilos para bloques de código */
  .prose pre {
    @apply bg-neutral-800 p-4 rounded-lg overflow-x-auto my-6;
  }

  .prose code {
    @apply text-pink-300;
  }

  .prose :not(pre) > code {
    @apply bg-neutral-800 px-1.5 py-0.5 rounded text-pink-300;
  }

  /* Estilos para enlaces */
  .prose a {
    @apply text-pink-500 hover:text-pink-400 transition-colors no-underline;
  }

  /* Estilos para encabezados */
  .prose h1, .prose h2, .prose h3, .prose h4 {
    @apply text-white font-bold;
  }

  .prose h2 {
    @apply text-2xl mt-10 mb-4;
  }

  .prose h3 {
    @apply text-xl mt-8 mb-3;
  }

  /* Estilos para listas */
  .prose ul, .prose ol {
    @apply my-6 pl-6;
  }
  
  .prose li {
    @apply mb-2;
  }

  /* Estilos para citas */
  .prose blockquote {
    @apply border-l-4 border-pink-500 pl-4 italic text-neutral-300;
  }

  /* Estilos para imágenes */
  .prose img {
    @apply rounded-lg shadow-lg my-8 mx-auto;
  }
</style>
